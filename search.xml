<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python OOP</title>
    <url>/2019/12/07/PythonOOP/</url>
    <content><![CDATA[<p>本文包括：<br>    基本含义：OOP的定义、构造函数、析构函数<br>    OOP方法讲解：普通方法、特性方法、静态方法、类方法<br>    继承：类属性的继承、实例属性的继承（super方法）、方法的继承、工厂模式（包含_ <em>call</em> _ <em>,</em> _ <em>str</em> _ <em>,</em> _ <em>doc</em> _）</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="一-OOP是什么？"><a href="#一-OOP是什么？" class="headerlink" title="一.OOP是什么？"></a>一.OOP是什么？</h2><h3 id="1-OOP的定义"><a href="#1-OOP的定义" class="headerlink" title="1.OOP的定义"></a>1.OOP的定义</h3><p>python3和python2的映射区别</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f2 = f()</span></pre></td></tr><tr><td class="code"><pre><span class="line">f1 = f()</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(id(f1))</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(id(f2))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    python3的一个对象，映射关系是同一个id。python2的对象，每次调用都会新生成一个地址</span></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">类：是由一些属性和方法组成的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">''' </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">对象的创建---&gt;类的事例化过程</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">三个特性：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">1.对象的句柄---&gt;区分不同的对象</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">2.属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    共有属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">				类属性（共同的属性分离出来）：属于类也属于对象</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        实例属性：只属于对象</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        局部变量</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    私有属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">3.方法  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''类属性'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    gongtong = ‘China’</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''实例属性'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.name = name</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.age = age</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getName</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> self.name</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getAge</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> self.age</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setName</span><span class="params">(self,name)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.name = name</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setAge</span><span class="params">(self,age)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.age = age</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"> 		<span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">'name:&#123;0&#125;,age:&#123;1&#125;'</span>.format(self.name,self.age)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 实例化Person</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">per = Person(<span class="string">'shenqiang'</span>,<span class="string">'28'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">per2 = Person(<span class="string">'lll'</span>,<span class="string">'20'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(per.getName(),per.getAge())</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">per2.setAge(<span class="string">'10'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">per2.setName(<span class="string">'shen'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(per2.getAge(),per2.getName())</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">pel = Person(<span class="string">'沈强'</span>,<span class="number">18</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(pel.getAge(),pel.getName())</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(pel.info())</span></pre></td></tr></table></figure>

<h3 id="2-构造函数"><a href="#2-构造函数" class="headerlink" title="2.构造函数"></a>2.构造函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">满足所有人类的个性，调用万能参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">构造函数：即使没写构造函数，类都是有构造函数的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">一个类可以有多个构造函数，建议一个类只有一个构造函数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">构造函数用来：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">1.初始化属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,**kwargs)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.kwargs = kwargs</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getInfo</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(list(self.kwargs.values()))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">per = Person(name=<span class="string">'shenqiang'</span>,age = <span class="string">'28'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">per.getInfo()</span></pre></td></tr></table></figure>

<h3 id="3-析构函数"><a href="#3-析构函数" class="headerlink" title="3.析构函数"></a>3.析构函数</h3><p>任何情况下都会最后执行析构函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''析构函数的执行顺序：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">对象实例化-&gt;构造函数-&gt;对象调用方法-&gt;代码跳转到具体的方法-&gt;执行方法的代码块-&gt;最后执行析构函数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'我是构造函数'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'我是析构函数'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'我是方法'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#实例化方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">per = person()</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#调用方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">per.info()</span></pre></td></tr></table></figure>

<h2 id="二-OOP方法讲解"><a href="#二-OOP方法讲解" class="headerlink" title="二.OOP方法讲解"></a>二.OOP方法讲解</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">属于类：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    类属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    静态方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    类方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">属于对象：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    实例属性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    普通方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    特性方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr></table></figure>

<h3 id="1-普通方法"><a href="#1-普通方法" class="headerlink" title="1.普通方法"></a>1.普通方法</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">普通方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    动态方法（万能参数）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">特性方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cnn</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(self,*args,**kwargs)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.args = args</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.kwargs = kwargs</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'这是个普通的方法'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">per = Person()</span></pre></td></tr><tr><td class="code"><pre><span class="line">per.info()</span></pre></td></tr></table></figure>

<h3 id="2-特性方法"><a href="#2-特性方法" class="headerlink" title="2.特性方法"></a>2.特性方法</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">特性方法：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">不能有形式参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">被调用的时候不要加（）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''特性方法调度@property'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">    @property</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getUserId</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">per = person</span></pre></td></tr><tr><td class="code"><pre><span class="line">per.getUserId</span></pre></td></tr></table></figure>

<h3 id="3-静态方法"><a href="#3-静态方法" class="headerlink" title="3.静态方法"></a>3.静态方法</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">静态方法：直接使用类名进行调用，它属于类</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">对象可以直接调用静态方法，一般不建议这么做</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MYSQL</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''静态方法，直接提供给全局调用'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">    @staticmethod</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cnn</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">'静态方法'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(MYSQL.cnn())</span></pre></td></tr></table></figure>

<h3 id="4-类方法"><a href="#4-类方法" class="headerlink" title="4.类方法"></a>4.类方法</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">类方法：直接使用类来调用</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">所有的用例在执行的时候只执行一次</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">    @classmethod</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cnn</span><span class="params">(cls)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">pass</span></span></pre></td></tr></table></figure>

<h3 id="5-方法说明"><a href="#5-方法说明" class="headerlink" title="5.方法说明"></a>5.方法说明</h3><p>​    方法用来描述对象所具有的行为，例如，列表对象的追加元素、插入元素、删除原宿、排序，字符串对象的分隔、连接、排版、替换、烤箱的温度设置、烘烤，等等</p>
<p>　　在类中定义的方法可以粗略分为四大类：公有方法、私有方法、静态方法和类方法。公有方法、私有方法一般是指属于对象的实例方法，其中私有方法的的名字以两个下划线（__）开始。每个对象都有自己的公有方法和私有方法，在这两类方法中都可以访问属于类和对象的成员；公有方法通过对象名直接调用，私有方法不能通过对象名直接调用，只能在实例中通过self调用，或在外部通过Python支持的特殊方式来调用.</p>
<p>　　类的所有实例方法都必须至少有一个名为self的参数，并且必须是方法的第一个形参（如果有多个形参的话），self参数代表对象自身。在类的实例方法中访问实例属性时需要以self为前缀，但在外部通过对象名调用对象方法时，并不需要传递这个参数，如果在外部通过类名调用属于对象的公有方法，需要显式为该方法的self参数传递一个对象名，用来明确指定访问哪个对象的数据成员。</p>
<p>　　静态方法和类方法都可以通过类名和对象名调用，但不能直接访问属于对象的成员，只能访问属于类的成员。一般将cls作为类方法的第一个参数，表示该类自身，在调用类方法时不需要为该函数传递值。</p>
<h2 id="三-继承"><a href="#三-继承" class="headerlink" title="三.继承"></a>三.继承</h2><h3 id="1-类属性的继承"><a href="#1-类属性的继承" class="headerlink" title="1.类属性的继承"></a>1.类属性的继承</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">继承：重用已有的数据和方法，减少代码的重复编写</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">子类继承父类所有的实例变量和方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 类属性的继承</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    address = <span class="string">'地球'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsaPerson</span><span class="params">(Person)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">per = UsaPerson()</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(per.address)</span></pre></td></tr></table></figure>

<h3 id="2-实例属性的继承（super方法）"><a href="#2-实例属性的继承（super方法）" class="headerlink" title="2.实例属性的继承（super方法）"></a>2.实例属性的继承（super方法）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''实例属性的继承和继承的两种方法'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fruit</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.name =name</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''由于业务需求，子类继承父类的实例属性'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span><span class="params">(Fruit)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,brand,color)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''子类继承父类的两种方式'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        Fruit.__init__(self,name)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># super(Apple,self).__init__(name)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.brand = brand</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.color = color</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span>(<span class="string">'我是水果&#123;0&#125;,我的的品牌是&#123;1&#125;，我是&#123;2&#125;色的'</span>.format(self.name,self.brand,self.color))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">apple = Apple(<span class="string">'banana'</span>,<span class="string">'baiguoyuan'</span>,<span class="string">'yellow'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(apple.info())</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''由业务需求，子类不继承父类的实例属性'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">apple</span><span class="params">(Fruit)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,brand,color)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.brand = brand</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.color = color</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span>(<span class="string">'我的的品牌是&#123;0&#125;，我是&#123;1&#125;色的'</span>.format(self.brand,self.color))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">apple = apple(<span class="string">'baiguoyuan'</span>,<span class="string">'yellow'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(apple.info())</span></pre></td></tr></table></figure>

<h3 id="3-方法的继承"><a href="#3-方法的继承" class="headerlink" title="3.方法的继承"></a>3.方法的继承</h3><h4 id="单继承"><a href="#单继承" class="headerlink" title="单继承"></a>单继承</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">方法的继承：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">1.子类为什么重写父类的方法：子类要有自己的特性</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">当子类重写父类的方法后，对子类进行实例化，子类调用的方法（父类/子类）都存在，执行的方法是子类的方法（从下到下）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">单个类继承的原则：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">1。子类继承了父类，但是子类没有重写父类的方法，使用的是父类的方法（从上而下）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">2。子类继承了父类，但是子类重写了父类的方法，使用的是子类的方法，子类优先使用自己的方法（从上而下）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fruit</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">print</span> (<span class="string">'水果是可以吃的'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span><span class="params">(Fruit)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,color)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.color = color</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''重写了eat方法'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'水果的颜色是：&#123;0&#125;'</span>.format(self.color))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Banana</span><span class="params">(Apple)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'myname is banana'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">apple = Apple(<span class="string">'yellow'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">apple.eat()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 需要一个对象，可以给个空对象</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Banana(<span class="string">''</span>).eat()</span></pre></td></tr></table></figure>

<h4 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">多个类继承：</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">1.从左到右</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">2.同级继承，跨级会报错</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">3.优先调用自己的函数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">⚠️延伸:新式类（object）C3算法（广度优先）和经典类（深度优先）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'Person need eat'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mother</span><span class="params">(Person)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'her is like eat fruit'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span><span class="params">(Person)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'hi is like eat Vegetables'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span><span class="params">(Father,Mother)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">son = Son()</span></pre></td></tr><tr><td class="code"><pre><span class="line">son.eat()</span></pre></td></tr></table></figure>

<h3 id="4-登陆实战案例"><a href="#4-登陆实战案例" class="headerlink" title="4.登陆实战案例"></a>4.登陆实战案例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Login</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,username,password)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.username = username</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.password = password</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getUsername</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> self.username</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUsername</span><span class="params">(self,username)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.username = username</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPassword</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> self.password</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setPassword</span><span class="params">(self,password)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.password = password</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        注册</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        '''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        temp = self.username+<span class="string">'|'</span>+self.password</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''改写，序列化和反序列化'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        json.dump(temp,open(<span class="string">'login'</span>, <span class="string">'w'</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'恭喜你注册成功！'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        f = str(json.load(open(<span class="string">'login'</span>, <span class="string">'r'</span>)))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        list1 = f.split(<span class="string">'|'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> list1[<span class="number">0</span>] == self.username <span class="keyword">and</span> list1[<span class="number">1</span>] == self.password:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">userInfo</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''改写，序列化和反序列化'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        f = str(json.load(open(<span class="string">'login'</span>, <span class="string">'r'</span>)))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        list1 = f.split(<span class="string">'|'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''验证用户等登陆是否成功'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        r = self.login()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> r:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print(<span class="string">'登陆成功！用户昵称为：&#123;0&#125;'</span>.format(list1[<span class="number">0</span>]))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print(<span class="string">'登陆失败！请检查您的账号和密码！'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exit</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        sys.exit(<span class="string">''</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'您已退出该系统!'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">r = Login(<span class="string">'shenqiang'</span>,<span class="string">'shen111'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">try</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            t = int(input(<span class="string">'1。注册；2。登陆;3。退出登陆 \n'</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print(e.args)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> t == <span class="number">1</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                r.register()</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">elif</span> t == <span class="number">2</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                r.userInfo()</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">elif</span> t == <span class="number">3</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                r.Exit()</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                print(<span class="string">'输入错误，请重新输入！'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">finally</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    main()</span></pre></td></tr></table></figure>

<h3 id="5-工厂模式（包含-call-str-doc-）"><a href="#5-工厂模式（包含-call-str-doc-）" class="headerlink" title="5.工厂模式（包含_ call _ , _ str _ , _ doc _）"></a>5.工厂模式（包含_ <em>call</em> _ <em>,</em> _ <em>str</em> _ <em>,</em> _ <em>doc</em> _）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''__call__:当函数调用__call__，函数内部生成的是静态方法'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">New</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, *args, **kwargs)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'我是一个静态方法'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">new = New().__call__()</span></pre></td></tr></table></figure>

<p>注意：_ <em>str</em> _的方法使用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">__str__：对象代表的含义，返回一个字符串，通过它可以把字符串和对象关联起来，方便某些程序的实现，该字符串表示了某个类，实现__str__后，可以直接使用print输出对象，也可以用str触发__str__的执行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">__doc__：打印出类的注释</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">1.对象的意思</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">2.返回一个字符串，把字符串和对象关联起来--&gt;该字符串表示这个对象</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Try</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''这事一个类'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(self.__doc__)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">try1 = Try().__str__()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''工厂模式'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Factory</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">CreateFruit</span><span class="params">(self,Fruit)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> Fruit == <span class="string">'apple'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> Apple()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">elif</span> Fruit == <span class="string">'banana'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> Banana()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fruit</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">'Fruit'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">'apple'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Banana</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">'banana'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    factory = Factory()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print(factory.CreateFruit(<span class="string">'apple'</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print(factory.CreateFruit(<span class="string">'banana'</span>))</span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>Python开发</tag>
        <tag>自动化测试</tag>
        <tag>容器化部署</tag>
        <tag>测试平台搭建</tag>
        <tag>Django</tag>
        <tag>Vue</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>DataDriver</title>
    <url>/2019/12/07/DataDrivers/</url>
    <content><![CDATA[<p>本文包括：<br>execl数据驱动、MySQL数据驱动、CSV数据驱动、爬取拉勾网实例、ddt测试驱动、对XML文件的读取、测试执行的log读取…</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="一-execl数据驱动"><a href="#一-execl数据驱动" class="headerlink" title="一.execl数据驱动"></a>一.execl数据驱动</h2><h3 id="1-xlutils简要说明"><a href="#1-xlutils简要说明" class="headerlink" title="1.xlutils简要说明"></a>1.xlutils简要说明</h3><p>导包：pip3 install xlutils</p>
<p>注意⚠️：xlutils在介些Execl文件的时候，只识别.xls后缀的文件，如果是.xlsx后缀的文件被解析，.xlsx后缀的文件会被破坏</p>
<h3 id="2-接口自动化中对execl简单的读取"><a href="#2-接口自动化中对execl简单的读取" class="headerlink" title="2.接口自动化中对execl简单的读取"></a>2.接口自动化中对execl简单的读取</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''xlrd写入文件，同时清空原文件,一般这种方法只用来读'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlrd</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''拿到文件的路径'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base_path</span><span class="params">(filename = None)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> os.path.join(os.path.dirname(__file__),filename)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''读取文件内容'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">work = xlrd.open_workbook(base_path(<span class="string">'execlTestFile.xls'</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''以下标或者sheet名取对应的哪页'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">sheet = work.sheet_by_index(<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># sheet = work.sheet_by_name()</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''查看文件有多少行'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(sheet.nrows)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''获取单元格内容,第3行，第3列'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(sheet.cell_value(<span class="number">2</span>,<span class="number">2</span>))</span></pre></td></tr></table></figure>

<h3 id="3-改写execl文件的内容"><a href="#3-改写execl文件的内容" class="headerlink" title="3.改写execl文件的内容"></a>3.改写execl文件的内容</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlrd</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xlutils.copy <span class="keyword">import</span> copy</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''拿到文件的路径'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base_path</span><span class="params">(filename = None)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> os.path.join(os.path.dirname(__file__),filename)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''打开文件'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">work = xlrd.open_workbook(base_path(<span class="string">'execlTestFile.xls'</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''把文件内存存在一个变量里'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">file_content = copy(work)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''拿到文件需要改写的sheet页'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">file = file_content.get_sheet(<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># print(file_content)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">定位文件位置写入内容</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">行和列以从0开始数下标</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">file.write(<span class="number">2</span>,<span class="number">2</span>,<span class="string">'沈强'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''保存文件，并且重新命名'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">file_content.save(base_path(<span class="string">'execlTestFile.xls'</span>))</span></pre></td></tr></table></figure>

<h3 id="4-configparser配置文件的读取（服务和数据库连接）"><a href="#4-configparser配置文件的读取（服务和数据库连接）" class="headerlink" title="4.configparser配置文件的读取（服务和数据库连接）"></a>4.configparser配置文件的读取（服务和数据库连接）</h3><p>配置文件名</p>
<p>config.ini</p>
<p>文件内容：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="section">[linux]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">ip:10.0.13.26</span></pre></td></tr><tr><td class="code"><pre><span class="line">port:22</span></pre></td></tr><tr><td class="code"><pre><span class="line">username:root</span></pre></td></tr><tr><td class="code"><pre><span class="line">password:W2ynE6b58wheeFho</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">ip:10.0.13.26</span></pre></td></tr><tr><td class="code"><pre><span class="line">port:22</span></pre></td></tr><tr><td class="code"><pre><span class="line">username:root</span></pre></td></tr><tr><td class="code"><pre><span class="line">password:W2ynE6b58wheeFho</span></pre></td></tr></table></figure>

<p>文件名</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tryConfigparser.py</span></pre></td></tr></table></figure>

<p>文件内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># @Author : shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> configparser</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''拿到文件的路径'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base_path</span><span class="params">(filename=None)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> os.path.join(os.path.dirname(__file__), filename)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''函数的默认参数处理'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getConfigparser</span><span class="params">(Linux=<span class="string">'linux'</span>)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''实例化对象'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    config = configparser.ConfigParser()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''读取文件内容'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    config.read(base_path(<span class="string">'config.ini'</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    ip = config.get(Linux, <span class="string">'ip'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    port = config.get(Linux, <span class="string">'port'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    username = config.get(Linux, <span class="string">'username'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    password = config.get(Linux, <span class="string">'password'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> [ip, port, username, password]</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(getConfigparser(),type(getConfigparser()))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># '''遍历文件内容'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># for i in range(len(getConfigparser())):</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     print(getConfigparser()[i])</span></span></pre></td></tr></table></figure>

<h3 id="5-mysql常用的一些操作指令"><a href="#5-mysql常用的一些操作指令" class="headerlink" title="5.mysql常用的一些操作指令"></a>5.mysql常用的一些操作指令</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">启动MySQL服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql.server start</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">停止MySQL服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql.server stop</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">重启MySQL服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql.server restart</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">进入MySQL数据库</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql -u root -p</span></pre></td></tr><tr><td class="code"><pre><span class="line">Password: 密文传输（shen6409175）</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''查看数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">show databases;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''选中数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">use students;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''查看表'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">show tables;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''创建表'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">create table student(</span></pre></td></tr><tr><td class="code"><pre><span class="line">   id int primary key,</span></pre></td></tr><tr><td class="code"><pre><span class="line">   name varchar(<span class="number">50</span>),</span></pre></td></tr><tr><td class="code"><pre><span class="line">   age varchar(<span class="number">10</span>),</span></pre></td></tr><tr><td class="code"><pre><span class="line">   address varchar(<span class="number">100</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   );</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''查看表结构'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">desc student;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''查看表设计'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">show create table student;</span></pre></td></tr></table></figure>

<h2 id="二-MySQL数据驱动"><a href="#二-MySQL数据驱动" class="headerlink" title="二.MySQL数据驱动"></a>二.MySQL数据驱动</h2><h3 id="1-数据库查询"><a href="#1-数据库查询" class="headerlink" title="1.数据库查询"></a>1.数据库查询</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">connectMysql</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">try</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''链接数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        connect = pymysql.connect(</span></pre></td></tr><tr><td class="code"><pre><span class="line">            host=<span class="string">'127.0.0.1'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            user=<span class="string">'root'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            password=<span class="string">'shen6409175'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            db=<span class="string">'students'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        )</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span>  e:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> e.args</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''创建游标'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur = connect.cursor()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''SQL语句分离'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># sql = 'select * from student where id = %s'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># params = (2,)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># '''查重'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># cur.execute(sql,params)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># '''单条数据的查询'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># data = cur.fetchone()</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># return datas</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        sql = <span class="string">'select * from student'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''查重'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.execute(sql)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''多条数据查询'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        datas = cur.fetchall()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''方法一，遍历'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># for data in datas:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#     print(data)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''方法二，列表推倒式'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        db = [data <span class="keyword">for</span> data <span class="keyword">in</span> datas]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> db</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">finally</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 关闭游标和链接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.close()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        connect.close()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(connectMysql())</span></pre></td></tr></table></figure>

<h3 id="2-数据库插入数据"><a href="#2-数据库插入数据" class="headerlink" title="2.数据库插入数据"></a>2.数据库插入数据</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">connectMysql</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">try</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''链接数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        connect = pymysql.connect(</span></pre></td></tr><tr><td class="code"><pre><span class="line">            host=<span class="string">'127.0.0.1'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            user=<span class="string">'root'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            password=<span class="string">'shen6409175'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            db=<span class="string">'students'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        )</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span>  e:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> e.args</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''创建游标'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur = connect.cursor()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''导入数据'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 单条语句的插入</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># sql = 'insert into student values(%s,%s,%s,%s);'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># params = (6,'沈～','24','南京')</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''批量插入数据'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        sql = <span class="string">'insert into student values(%s,%s,%s,%s);'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        params = [</span></pre></td></tr><tr><td class="code"><pre><span class="line">            (<span class="number">7</span>, <span class="string">'沈～'</span>, <span class="string">'24'</span>, <span class="string">'南京'</span>),</span></pre></td></tr><tr><td class="code"><pre><span class="line">            (<span class="number">8</span>, <span class="string">'沈～'</span>, <span class="string">'24'</span>, <span class="string">'南京'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.executemany(sql,params)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''insert后必须要commit()'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        connect.commit()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">finally</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 关闭游标和链接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.close()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        connect.close()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">connectMysql()</span></pre></td></tr></table></figure>

<h3 id="3-数据库删除数据"><a href="#3-数据库删除数据" class="headerlink" title="3.数据库删除数据"></a>3.数据库删除数据</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># @Author : shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">connectMysqlDelect</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">try</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''连接数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        connectMysqlDelect = pymysql.Connect(</span></pre></td></tr><tr><td class="code"><pre><span class="line">            host = <span class="string">'127.0.0.1'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            user = <span class="string">'root'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            password = <span class="string">'shen6409175'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            db = <span class="string">'students'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        )</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span>  e:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(e.args)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''创建游标'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur = connectMysqlDelect.cursor()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''执行sql'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        mysql = <span class="string">'delete from student order by id desc limit 1'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.execute(mysql)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''提交事务'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        connectMysqlDelect.commit()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'success'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">finally</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''关闭游标和数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.close()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        connectMysqlDelect.close()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">connectMysqlDelect()</span></pre></td></tr></table></figure>

<h3 id="4-一个完整的Mysql数据驱动方式"><a href="#4-一个完整的Mysql数据驱动方式" class="headerlink" title="4.一个完整的Mysql数据驱动方式"></a>4.一个完整的Mysql数据驱动方式</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MysqlTry</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''链接数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connectMysql</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''尝试链接数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">try</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            connect =pymysql.connect(</span></pre></td></tr><tr><td class="code"><pre><span class="line">                host = <span class="string">'127.0.0.1'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">                user=<span class="string">'root'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">                password=<span class="string">'shen6409175'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">                db=<span class="string">'students'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            )</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print(e.args)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> connect</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">selectMysql</span><span class="params">(self,sql,params)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''创建游标'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur = self.connectMysql().cursor()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''查重'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.execute(sql,params)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''查询'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        result = cur.fetchall()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''删除游标'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cur.close()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> result</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkValid</span><span class="params">(username,age)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    opera = MysqlTry()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    sql = <span class="string">"select * from student where name = %s and age = %s"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    params=(username,age)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> opera.selectMysql(sql=sql,params=params)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkinfo</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    username = input(<span class="string">'请输入用户名 \n'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    age = input(<span class="string">'请输入用户年龄 \n'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    result = checkValid(username,age)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> result:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''关闭数据库'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        MysqlTry().connectMysql().close()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'该用户在数据库中，测试通过！'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'该用户不在数据库中，存在bug！'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    checkinfo()</span></pre></td></tr></table></figure>

<h2 id="三-CSV数据驱动"><a href="#三-CSV数据驱动" class="headerlink" title="三.CSV数据驱动"></a>三.CSV数据驱动</h2><p>注意⚠️：CSV文件的生成，只有通过文件软件的另存为csv格式才可生成没有异常的文件，千万不可以直接修改文件后缀名。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># @Author : shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''读取csv文件的方法'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ReadCsvlist</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''方法一:列表方式取数据'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''通过列表提取csv文件'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">with</span> open(<span class="string">'csvTestFile.csv'</span>) <span class="keyword">as</span> file:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''reader是csv的迭代器'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        reader = csv.reader(file)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''跳过首行'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        next(reader)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">'''列表推倒式'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        db =  [item <span class="keyword">for</span> item <span class="keyword">in</span> reader]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> db</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(ReadCsvlist(),type(ReadCsvlist()))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     '''方法二：字典的格式输出csv文档内容'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     with open('csvTestFile.csv',encoding='utf-8') as file:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#         reader = csv.DictReader(file)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#         for item in reader:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#             print(dict(item))</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># ReadCsvlist()</span></span></pre></td></tr></table></figure>

<h2 id="四-爬取拉勾网实例"><a href="#四-爬取拉勾网实例" class="headerlink" title="四.爬取拉勾网实例"></a>四.爬取拉勾网实例</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># @Author : shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  csv</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  requests</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHeaders</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	headers=&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="string">'Content-Type'</span>:<span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="string">'Cookie'</span>:<span class="string">'_ga=GA1.2.1237290736.1534169036; user_trace_token=20180813220356-b7e42516-9f01-11e8-bb78-525400f775ce; LGUID=20180813220356-b7e428ad-9f01-11e8-bb78-525400f775ce; index_location_city=%E5%85%A8%E5%9B%BD; _gid=GA1.2.675811712.1540794503; JSESSIONID=ABAAABAAAGFABEF93F47251563A52306423D37E945D2C54; _gat=1; LGSID=20181029213144-fa3c8e13-db7e-11e8-b51c-525400f775ce; PRE_UTM=; PRE_HOST=www.bing.com; PRE_SITE=https%3A%2F%2Fwww.bing.com%2F; PRE_LAND=https%3A%2F%2Fwww.lagou.com%2F; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1539529521,1539785285,1540794503,1540819902; SEARCH_ID=ae3ae41a58d94802a68e848d36c30711; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1540819909; LGRID=20181029213151-fe7324dc-db7e-11e8-b51c-525400f775ce'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'Referer'</span>:<span class="string">'https://www.lagou.com/jobs/list_%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88?labelWords=sug&amp;fromSearch=true&amp;suginput=%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95'</span>&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> headers</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">laGou</span><span class="params">(url=<span class="string">'https://www.lagou.com/jobs/positionAjax.json?needAddtionalResult=false'</span>,page=<span class="number">2</span>)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	positions = []</span></pre></td></tr><tr><td class="code"><pre><span class="line">	r = requests.post(</span></pre></td></tr><tr><td class="code"><pre><span class="line">		url=url,</span></pre></td></tr><tr><td class="code"><pre><span class="line">		headers=getHeaders(),</span></pre></td></tr><tr><td class="code"><pre><span class="line">		data=&#123;<span class="string">'first'</span>: <span class="literal">False</span>, <span class="string">'pn'</span>: page, <span class="string">'kd'</span>: <span class="string">'自动化测试工程师'</span>&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">15</span>):</span></pre></td></tr><tr><td class="code"><pre><span class="line">		city = r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][i][<span class="string">'city'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		education = r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][i][<span class="string">'education'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		workYear = r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][i][<span class="string">'workYear'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		positionAdvantage = r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][i][<span class="string">'positionAdvantage'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		salary = r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][i][<span class="string">'salary'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		companyFullName = r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][i][<span class="string">'companyFullName'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		positionLables = r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][i][<span class="string">'positionLables'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		position = &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="string">'公司名称'</span>: companyFullName,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="string">'城市'</span>: city,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="string">'学历'</span>: education,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="string">'工作年限'</span>: workYear,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="string">'薪资'</span>: salary,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="string">'工作标签'</span>: positionLables,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="string">'福利'</span>: positionAdvantage</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		positions.append(position)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">for</span> item <span class="keyword">in</span> positions:</span></pre></td></tr><tr><td class="code"><pre><span class="line">		print(item)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">for</span> item <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">31</span>):</span></pre></td></tr><tr><td class="code"><pre><span class="line">		laGou(page=item)</span></pre></td></tr></table></figure>

<h2 id="五-DDT测试驱动"><a href="#五-DDT测试驱动" class="headerlink" title="五.DDT测试驱动"></a>五.DDT测试驱动</h2><p>注意⚠️：有相同执行步骤的测试用例可以使用ddt</p>
<h3 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1.基本介绍"></a>1.基本介绍</h3><p>详细使用方法参考我的博客圆：<a href="https://www.cnblogs.com/shen-qiang/p/11954061.html" target="_blank" rel="noopener">https://www.cnblogs.com/shen-qiang/p/11954061.html</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">注意⚠️：以下代码不可执行</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  csv</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  requests</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  ddt</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  unittest</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">url=<span class="string">'https://www.lagou.com/jobs/positionAjax.json?needAddtionalResult=false'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHeaders</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">   headers=&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">'Content-Type'</span>:<span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">'Cookie'</span>:<span class="string">'_ga=GA1.2.1237290736.1534169036; user_trace_token=20180813220356-b7e42516-9f01-11e8-bb78-525400f775ce; LGUID=20180813220356-b7e428ad-9f01-11e8-bb78-525400f775ce; index_location_city=%E5%85%A8%E5%9B%BD; _gid=GA1.2.675811712.1540794503; JSESSIONID=ABAAABAAAGFABEF93F47251563A52306423D37E945D2C54; _gat=1; LGSID=20181029213144-fa3c8e13-db7e-11e8-b51c-525400f775ce; PRE_UTM=; PRE_HOST=www.bing.com; PRE_SITE=https%3A%2F%2Fwww.bing.com%2F; PRE_LAND=https%3A%2F%2Fwww.lagou.com%2F; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1539529521,1539785285,1540794503,1540819902; SEARCH_ID=ae3ae41a58d94802a68e848d36c30711; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1540819909; LGRID=20181029213151-fe7324dc-db7e-11e8-b51c-525400f775ce'</span>,   <span class="string">'Referer'</span>:<span class="string">'https://www.lagou.com/jobs/list_%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88?labelWords=sug&amp;fromSearch=true&amp;suginput=%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95'</span>&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   <span class="keyword">return</span> headers</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">   list1=[]</span></pre></td></tr><tr><td class="code"><pre><span class="line">   t=[i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">31</span>)]</span></pre></td></tr><tr><td class="code"><pre><span class="line">   list1.append(t)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   <span class="keyword">return</span> list1</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">@ddt.ddt</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LaGou</span><span class="params">(unittest.TestCase)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">   @ddt.data((1,),(2,),(3,))</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">   @ddt.unpack</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">test_laGou</span><span class="params">(self,page)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      positions = []</span></pre></td></tr><tr><td class="code"><pre><span class="line">      r = requests.post(</span></pre></td></tr><tr><td class="code"><pre><span class="line">         url=url,</span></pre></td></tr><tr><td class="code"><pre><span class="line">         headers=getHeaders(),</span></pre></td></tr><tr><td class="code"><pre><span class="line">         data=&#123;<span class="string">'first'</span>: <span class="literal">False</span>, <span class="string">'pn'</span>: page, <span class="string">'kd'</span>: <span class="string">'自动化测试工程师'</span>&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">      self.assertEqual(r.json()[<span class="string">'success'</span>],<span class="literal">True</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">      print(r.json()[<span class="string">'content'</span>][<span class="string">'positionResult'</span>][<span class="string">'result'</span>][<span class="number">0</span>][<span class="string">'city'</span>])</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">   unittest.main(verbosity=<span class="number">2</span>)</span></pre></td></tr></table></figure>

<h3 id="2-DDT的简单应用"><a href="#2-DDT的简单应用" class="headerlink" title="2.DDT的简单应用"></a>2.DDT的简单应用</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ddt <span class="keyword">import</span> data,unpack,ddt</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">@ddt</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDdtTest</span><span class="params">(unittest.TestCase)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">    @data((1,1),(2,2),(3,3))</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">    @unpack</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_ddt</span><span class="params">(self,value1,value2)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'实际参数&#123;0&#125;,预期参数&#123;1&#125;'</span>.format(value1,value2))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(self.assertEqual(value1,value2))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    unittest.main(verbosity=<span class="number">2</span>)</span></pre></td></tr></table></figure>

<h2 id="六-对XML文件的读取"><a href="#六-对XML文件的读取" class="headerlink" title="六.对XML文件的读取"></a>六.对XML文件的读取</h2><p>XML文件格式</p>
<p>![image-20191129212515675](/Users/apple/Library/Application Support/typora-user-images/image-20191129212515675.png)</p>
<p>XML文件读取方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># @Author : shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xml.dom.minidom</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># def dirverXml(value=None):</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     '''取得单节点的数据'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     xmlFile = xml.dom.minidom.parse('data.xml')</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     db = xmlFile.documentElement</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     itemList = db.getElementsByTagName(value)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     item = itemList[0]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#     return item.firstChild.data</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># print(dirverXml('admin'))</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dirverXmlName</span><span class="params">(parent=None,child = None)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'''取得单节点的数据内容'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    xmlFile = xml.dom.minidom.parse(<span class="string">'data.xml'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    db = xmlFile.documentElement</span></pre></td></tr><tr><td class="code"><pre><span class="line">    itemList = db.getElementsByTagName(parent)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    item = itemList[<span class="number">0</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> item.getAttribute(child)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(dirverXmlName(<span class="string">'WuYA'</span>,<span class="string">'nick'</span>))</span></pre></td></tr></table></figure>

<h2 id="七-测试执行的log读取"><a href="#七-测试执行的log读取" class="headerlink" title="七.测试执行的log读取"></a>七.测试执行的log读取</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/user/bin/env python</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#Author:shenqiang</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  logging</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span>  webdriver</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  unittest</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(log_content)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment"># 定义文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    logFile = logging.FileHandler(<span class="string">'log.md'</span>, <span class="string">'a'</span>,encoding=<span class="string">'utf-8'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment"># log格式</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    fmt = logging.Formatter(fmt=<span class="string">'%(asctime)s-%(name)s-%(levelname)s-%(module)s:%(message)s'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    logFile.setFormatter(fmt)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment"># 定义日志</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    logger1 = logging.Logger(<span class="string">''</span>, level=logging.DEBUG)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    logger1.addHandler(logFile)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    logger1.info(log_content)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui</span><span class="params">(unittest.TestCase)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.driver=webdriver.Chrome()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        log(<span class="string">'初始化浏览器'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_001</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        log(<span class="string">'开始测试'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        log(<span class="string">'测试结束'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.driver.quit()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    unittest.main(verbosity=<span class="number">2</span>)</span></pre></td></tr></table></figure>

<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>Python开发</tag>
      </tags>
  </entry>
</search>
